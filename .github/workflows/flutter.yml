name: Flutter CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'

    - name: Install dependencies
      run: flutter pub get

    - name: Run tests
      run: flutter test

  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install dependencies
      run: flutter pub get

    - name: Build APK
      run: flutter build apk --release

    - name: Rename APK
      run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/SmartCityLS.apk

    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: SmartCityLS.apk
        path: build/app/outputs/flutter-apk/SmartCityLS.apk

    - name: Get latest tag
      id: get_tag
      run: echo ::set-output name=TAG::$(git describe --tags --abbrev=0)

    - name: Increment version number
      id: increment_version
      run: |
        TAG=${{ steps.get_tag.outputs.TAG }}
        VERSION=${TAG#v}
        IFS='.' read -ra ADDR <<< "$VERSION"
        PATCH=${ADDR[2]}
        PATCH=$((PATCH + 1))
        NEW_TAG="v${ADDR[0]}.${ADDR[1]}.$PATCH"
        echo ::set-output name=NEW_TAG::$NEW_TAG

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.increment_version.outputs.NEW_TAG }}
        release_name: 'Release ${{ steps.increment_version.outputs.NEW_TAG }}'
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/SmartCityLS.apk
        asset_name: SmartCityLS.apk
        asset_content_type: application/vnd.android.package-archive
