// Mocks generated by Mockito 5.4.4 from annotations
// in mobile_app/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mobile_app/comunication/mqtt_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mqtt_client/mqtt_client.dart' as _i5;
import 'package:mqtt_client/mqtt_server_client.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMqttServerClient_0 extends _i1.SmartFake
    implements _i2.MqttServerClient {
  _FakeMqttServerClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MQTTService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMQTTService extends _i1.Mock implements _i3.MQTTService {
  MockMQTTService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MqttServerClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeMqttServerClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.MqttServerClient);

  @override
  set onMessageReceived(dynamic Function(String)? _onMessageReceived) =>
      super.noSuchMethod(
        Invocation.setter(
          #onMessageReceived,
          _onMessageReceived,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> connect() => (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void disconnect() => super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDisconnected() => super.noSuchMethod(
        Invocation.method(
          #onDisconnected,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onConnected() => super.noSuchMethod(
        Invocation.method(
          #onConnected,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onSubscribed(String? topic) => super.noSuchMethod(
        Invocation.method(
          #onSubscribed,
          [topic],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onSubscribeFail(String? topic) => super.noSuchMethod(
        Invocation.method(
          #onSubscribeFail,
          [topic],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pong() => super.noSuchMethod(
        Invocation.method(
          #pong,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void subscribeToTopic(String? topic) => super.noSuchMethod(
        Invocation.method(
          #subscribeToTopic,
          [topic],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void publishMessage(
    String? topic,
    String? message,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #publishMessage,
          [
            topic,
            message,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onMessage(List<_i5.MqttReceivedMessage<_i5.MqttMessage>>? event) =>
      super.noSuchMethod(
        Invocation.method(
          #onMessage,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnMessageReceived(dynamic Function(String)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnMessageReceived,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
}
